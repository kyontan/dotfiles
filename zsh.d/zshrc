source ~/zsh.d/zshenv

bindkey '^[[H' beginning-of-line
bindkey '^[[F' end-of-line
bindkey "^[[3~" delete-char

bindkey "\e[1~" beginning-of-line
bindkey "\e[4~" end-of-line

precmd () {print -Pn "\e]2; %~/ \a"}
preexec () {print -Pn "\e]2; %~/ \a"}

# disable XON/XOFF flow control
# (Prevent stopping terminal when sending C-s)
stty -ixon

# prompt
#autoload -U colors
#colors
PROMPT='%n@%m # '
# RPROMPT='[%d]'
RPROMPT=''

# completion
autoload -U compinit
compinit
setopt correct
zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}
setopt COMBINING_CHARS

zstyle ':completion:*:default' menu select=2

# history
HISTFILE=~/.zsh_history
HISTSIZE=10000
SAVEHIST=10000
setopt hist_ignore_dups
setopt share_history
setopt auto_pushd
setopt pushd_ignore_dups

setopt auto_cd
setopt list_packed

# alias
alias ll='ls -lF'
alias la='ls -A'
alias l='ls -CF'
# alias rm='rm -i'
alias cp='cp -i'
alias mv='mv -i'
alias vi='vim'

# alias tsp='tmux new-session \; split-window -h -d'
# alias tvsp='tmux new-session \; split-window -d'

# ------------------------------------------------------------------

alias cc='/usr/bin/cc'

alias nano='nano -k -w -i -S -T 2'

# alias huba="hub add -A && hub status"
# alias hubs="hub status"
# alias hubc="hub commit"
# alias hubp="hub push origin master"
# alias hubg="hub push gitlab master"
# alias hubl="hub log --oneline"

alias javac='javac -J-Dfile.encoding=UTF-8'
alias jar='jar -J-Dfile.encoding=UTF-8'

alias cdc="cd ~/Code"
alias cdd="cd ~/Downloads"
alias cds="cd ~/Documents/School"
alias cdg="cd ~/go/src"

alias p="peco"

alias be="bundle exec"
alias bss="browser-sync start --server"
alias bsc="browser-sync start --server --config bs-config.js"

# Fix for tmux
# brew install reattach-to-user-namespace
alias subl='reattach-to-user-namespace subl'
alias open='reattach-to-user-namespace open'
alias vim='reattach-to-user-namespace vim'
alias pbcopy='reattach-to-user-namespace pbcopy'

# colordiff
if [[ -x `which colordiff` ]]; then
  alias diff='colordiff -u'
else
  alias diff='diff -u'
fi

source ~/.profile

# peco find directory
function peco-find-file() {
    if git rev-parse 2> /dev/null; then
        source_files=$(git ls-files)
    else
        source_files=$(find . -type f)
    fi

    selected_files=$(echo $source_files | peco --prompt "[find file]")
    trimed=$(echo $selected_files | tr -d '\n')
    if [ ! -z $trimed ]; then
      BUFFER="${BUFFER}${trimed}"
      CURSOR=$#BUFFER
    fi
    zle redisplay
}

zle -N peco-find-file

# bind keys
bindkey '^f' peco-find-file

# for zsh-completions
fpath=($HOME/.zsh/completion $fpath)

function peco-history-selection() {
    BUFFER=`history -n 1 | tail -r  | awk '!a[$0]++' | peco`
    CURSOR=$#BUFFER
    zle reset-prompt
}

zle -N peco-history-selection
bindkey '^R' peco-history-selection

function tmux-remake-socket () {
    if [ ! $TMUX ]; then
        return
    fi
    tmux_socket_file=`echo $TMUX|awk -F, '{print $1}'`
    if [ ! -S $tmux_socket_file ]; then
        mkdir -m700 `dirname $tmux_socket_file` 2> /dev/null
        killall -SIGUSR1 tmux
    else
        echo tmux unix domain socket exists! nothing to do.
    fi
    unset tmux_socket_file
}

